<UserControl x:Class="Uzi.Ikosa.Client.UI.TurnTrackerPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uipvm="clr-namespace:Uzi.Ikosa.Proxy.ViewModel;assembly=Uzi.Ikosa.Proxy"
             xmlns:ucc="clr-namespace:Uzi.Core.Contracts;assembly=Uzi.Core.Contracts"
             xmlns:uic="clr-namespace:Uzi.Ikosa.Contracts;assembly=Uzi.Ikosa.Contracts"
             xmlns:uich="clr-namespace:Uzi.Ikosa.Contracts.Host;assembly=Uzi.Ikosa.Contracts"
             xmlns:uicui="clr-namespace:Uzi.Ikosa.Client.UI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type uipvm:ContentStack}">
            <ItemsControl ItemsSource="{Binding Path=Contents}" VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="{Binding Path=Orientation}"></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <!-- INFO -->
        <DataTemplate DataType="{x:Type ucc:Info}">
            <TextBlock Text="{Binding Path=Message}" FontStyle="Italic"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:SeparatorViewModel}">
            <Separator></Separator>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type uipvm:MenuViewModel}" ItemsSource="{Binding Path=SubItems}">
        </HierarchicalDataTemplate>
        <uicui:BoolVisibilityConverter x:Key="bvcCollapse" TrueMode="Visible" FalseMode="Collapsed"></uicui:BoolVisibilityConverter>
        <uicui:BoolVisibilityConverter x:Key="bvcHidden" TrueMode="Visible" FalseMode="Hidden"></uicui:BoolVisibilityConverter>
        <DataTemplate DataType="{x:Type uich:CreatureLoginInfo}">
            <Border Margin="2" BorderBrush="Black" CornerRadius="1" BorderThickness="0.5" Padding="1">
                <StackPanel Orientation="Horizontal" MinWidth="144" Background="LightYellow">
                    <Image Source="{Binding Path=Portrait.Image}" 
                       Stretch="Uniform" Width="48" Height="48"></Image>
                    <StackPanel VerticalAlignment="Center" Margin="2">
                        <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" FontSize="9"/>
                        <TextBlock Text="{Binding Path=ClassString}" FontStyle="Oblique" FontSize="9"/>
                        <TextBlock Text="{Binding Path=Species}" FontSize="9"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uic:LocalActionBudgetInfo}">
            <ContentControl Content="{Binding Path=CreatureLoginInfo}"></ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uic:TickInfo}">
            <Border Background="Azure" BorderBrush="Black" BorderThickness="0.5">
                <StackPanel Orientation="Vertical" MinWidth="48" Margin="2" >
                    <ContentControl Content="{Binding Path=Budgets}"/>
                    <TextBlock><Run Text="Time:"/><Run Text="{Binding Path=Time}"/></TextBlock>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uic:ActivityInfo}">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding Path=DisplayName}"/>
                <TextBlock Text="{Binding Path=Description}" Visibility="{Binding Path=DescriptionVisibility}"/>
            </StackPanel>
        </DataTemplate>
        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Margin" Value="4,0"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="MinWidth" Value="64"/>
            <Setter Property="MinHeight" Value="24"/>
        </Style>
        <HierarchicalDataTemplate DataType="{x:Type uipvm:TeamGroupModel}"
                                  ItemsSource="{Binding Path=Creatures}">
            <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
            </Border>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type uipvm:TimelineGroupModel}"
                                  ItemsSource="{Binding Path=Creatures}">
            <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
            </Border>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type uipvm:TimeTickMode}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50,*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="50,*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" FontSize="24" Text="Time Tick Tracker"></TextBlock>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center">
                    <Run Text="Time:" FontWeight="Bold"/>
                    <Run DataContext="{Binding Path=Tracker}" 
                         Text="{Binding Path=CurrentTime}"/>
                </TextBlock>
                <Grid Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33,*"/>
                        <ColumnDefinition Width="33,*"/>
                        <ColumnDefinition Width="33,*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Grid.Column="1" 
                              DataContext="{Binding Path=Tracker}" Content="Auto-Tick" 
                              IsChecked="{Binding Path=IsAutoTimeTick}" ></CheckBox>
                    <CheckBox Grid.Row="0" Grid.Column="2"
                              DataContext="{Binding Path=MasterModel}" Content="Paused" 
                              IsChecked="{Binding Path=Proxies.IsPaused, Mode=OneWay}" ></CheckBox>
                    <Button Grid.Row="1" Grid.Column="0" 
                            DataContext="{Binding Path=MasterModel}" Content="Push Time" 
                            Command="{Binding Path=DoPushTimeTick}" Margin="2,1"></Button>
                    <Button Grid.Row="1" Grid.Column="1" 
                            DataContext="{Binding Path=MasterModel}" Content="Auto-Tick" 
                            Command="{Binding Path=DoToggleAutoTimeTick}" Margin="4,1"></Button>
                    <Button Grid.Row="1" Grid.Column="2" 
                            DataContext="{Binding Path=MasterModel}" Content="Pause" 
                            Command="{Binding Path=DoTogglePause}" Margin="4,1"></Button>
                </Grid>
                <Label Grid.Row="3" Content="Tracked"></Label>
                <TreeView Grid.Row="4" Margin="0,0,2,0"
                          x:Name="tvwTracked"
                          ItemsSource="{Binding Path=ActiveTeams}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}">
                                    <ContentControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding Path=TickTrackerMode.DoControl}"
                                                      CommandParameter="{Binding Path=CreatureTrackerInfo}"/>
                                    </ContentControl.InputBindings>
                                </ContentControl>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Has User" IsChecked="{Binding Path=HasUser, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="Has Master" IsChecked="{Binding Path=HasMasterUser, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>

                <StackPanel Grid.Row="4" Grid.Column="1" >
                    <Button Content="Remove &gt;" Margin="4" 
                            Command="{Binding Path=DoDrop}"
                            CommandParameter="{Binding ElementName=tvwTracked, Path=SelectedItem}"></Button>
                </StackPanel>
                
                <Label Grid.Row="3" Grid.Column="2" Content="All in Map"></Label>
                <TreeView Grid.Row="4" Grid.Column="2" Margin="2,0,0,0" ItemsSource="{Binding Path=NonTrackedTeams}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}">
                                    <ContentControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding Path=TickTrackerMode.DoControl}"
                                                      CommandParameter="{Binding Path=CreatureTrackerInfo}"/>
                                    </ContentControl.InputBindings>
                                </ContentControl>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Has User" IsChecked="{Binding Path=HasUser, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="Has Master" IsChecked="{Binding Path=HasMasterUser, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:TurnTickMode}">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50,*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                           FontSize="24" Text="Turn Tracker"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                           VerticalAlignment="Center">
                    <Run Text="Time:" FontWeight="Bold"/>
                    <Run DataContext="{Binding Path=Tracker}" 
                         Text="{Binding Path=CurrentTime}"/>
                </TextBlock>
                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="1" Grid.Column="0" 
                              DataContext="{Binding Path=Tracker}" Content="Initiative" 
                              IsChecked="{Binding Path=IsInitiative}" ></CheckBox>
                    <CheckBox Grid.Row="0" Grid.Column="1"
                              DataContext="{Binding Path=MasterModel}" Content="Paused" 
                              IsChecked="{Binding Path=Proxies.IsPaused, Mode=OneWay}" ></CheckBox>
                    <Button Grid.Row="1" Grid.Column="1" 
                            DataContext="{Binding Path=MasterModel}" Content="Pause" 
                            Command="{Binding Path=DoTogglePause}" Margin="4,1"></Button>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Stand Down Group"></TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding StandDownGroupName, UpdateSourceTrigger=PropertyChanged}" Margin="1" MinWidth="96"/>
                    <Button Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="4,1"
                            Content="Stand Down" Command="{Binding DoStandDown}"/>
                </Grid>
                <Label Grid.Row="3" Grid.Column="0" Content="Actors"></Label>
                <ListBox Grid.Row="4" Grid.Column="0" Grid.RowSpan="3" Margin="1,1"
                         ItemsSource="{Binding Path=Creatures}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}">
                                    <ContentControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding Path=TickTrackerMode.DoControl}"
                                                      CommandParameter="{Binding}"/>
                                    </ContentControl.InputBindings>
                                </ContentControl>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                                <Button Content="End Turn" Visibility="{Binding Path=IsFocusedVisibility}" VerticalAlignment="Center"
                                        CommandParameter="{Binding}" Command="{Binding Path=TickTrackerMode.EndTurnCommand}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Label Grid.Row="3" Grid.Column="1" Content="Delayed"></Label>
                <ListBox Grid.Row="4" Grid.Column="1" Margin="0,1,1,1" MinHeight="64"
                         DataContext="{Binding Path=Tracker}"
                         ItemsSource="{Binding Path=DelayedBudgets}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True">

                            </WrapPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Label Grid.Row="5" Grid.Column="1" Content="Reaction Order"></Label>
                <ListBox Grid.Row="6" Grid.Column="1" Margin="0,0,1,1" MinHeight="64"
                         DataContext="{Binding Path=Tracker}"
                         ItemsSource="{Binding Path=ReactableBudgets}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True">

                            </WrapPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:RoundMarkerMode}">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50,*"/>
                    <ColumnDefinition Width="50,*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" FontSize="24" Text="Non Turn-Tracked Creatures"></TextBlock>
                <TextBlock Grid.Row="1" VerticalAlignment="Center">
                    <Run Text="Time:" FontWeight="Bold"/>
                    <Run DataContext="{Binding Path=Tracker}" 
                         Text="{Binding Path=CurrentTime}"/>
                </TextBlock>
                <Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left"
                            DataContext="{Binding Path=MasterModel}" Content="Push Time" 
                            Command="{Binding Path=DoPushTimeTick}" Margin="2,1"></Button>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Stand Down Group"></TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding StandDownGroupName, UpdateSourceTrigger=PropertyChanged}" Margin="1" MinWidth="96"/>
                    <Button Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="4,1"
                            Content="Stand Down" Command="{Binding DoStandDown}"/>
                </Grid>
                <TreeView ItemsSource="{Binding Path=Teams}" Grid.Row="3" Grid.Column="0" Margin="0,0,2,0">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                        <HierarchicalDataTemplate DataType="{x:Type uipvm:TeamGroupModel}"
                                                  ItemsSource="{Binding Path=Creatures}">
                            <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
                                    <Button Grid.Column="1" Content="&gt;&gt;" VerticalAlignment="Center" MinHeight="16" MinWidth="16" HorizontalAlignment="Right"
                                            ToolTip="Induct entire team into turn-tracker" Margin="2"
                                            Command="{Binding Path=TickTrackerMode.DoNeedsTeamTicks}" CommandParameter="{Binding}"/>
                                </Grid>
                            </Border>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}">
                                    <ContentControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding Path=TickTrackerMode.DoControl}"
                                                      CommandParameter="{Binding Path=CreatureTrackerInfo}"/>
                                    </ContentControl.InputBindings>
                                </ContentControl>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Has User" IsChecked="{Binding Path=HasUser, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="Has Master" IsChecked="{Binding Path=HasMasterUser, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                                <Button Command="{Binding Path=TickTrackerMode.DoNeedsTurnTick}" VerticalAlignment="Center"
                                        CommandParameter="{Binding CreatureTrackerInfo}"
                                        Content="Turn-Tick" ToolTip="Induct into turn-tracker" ></Button>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="2,1">
                    <Button HorizontalAlignment="Left"
                            Content="Commit Needs" ToolTip="Will commit these creatures to enter the turn tracker"
                            Command="{Binding Path=DoCommitNeedsTurnTick}"></Button>
                    <TextBlock Text="Marked to Enter Turn-Tracker" Margin="2"/>
                </StackPanel>
                <TreeView ItemsSource="{Binding Path=PendingNeedsTeams}" Grid.Row="3" Grid.Column="1" Margin="2,0,0,0"
                          ToolTip="Double-click actor to remove">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                        <HierarchicalDataTemplate DataType="{x:Type uipvm:TeamGroupModel}"
                                                  ItemsSource="{Binding Path=Creatures}">
                            <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
                                </Grid>
                            </Border>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}">
                                    <ContentControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding Path=TickTrackerMode.DoRemoveNeedsTurnTick}"
                                                      CommandParameter="{Binding Path=CreatureTrackerInfo}"/>
                                    </ContentControl.InputBindings>
                                </ContentControl>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Has User" IsChecked="{Binding Path=HasUser, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="Has Master" IsChecked="{Binding Path=HasMasterUser, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:NeedsTurnTickMode}">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50,*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="50,*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50,*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}" />
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <CheckBox IsEnabled="False" Content="Needs Tick" IsChecked="{Binding Path=NeedsTurnTick, Mode=OneWay}"/>
                                <CheckBox IsEnabled="False" Content="In Tracker" IsChecked="{Binding Path=IsInTracker, Mode=OneWay}"/>
                            </StackPanel>
                            <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                       DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                        </StackPanel>
                    </DataTemplate>
                </Grid.Resources>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" 
                           FontSize="24" Text="Add Creatures to Turn Tracker"></TextBlock>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="3">
                    <Run Text="Time:" FontWeight="Bold"/>
                    <Run DataContext="{Binding Path=Tracker}" 
                         Text="{Binding Path=CurrentTime}"/>
                </TextBlock>
                <Button Grid.Row="2" Grid.Column="2" Content="Commit" HorizontalAlignment="Right"
                        Command="{Binding Path=DoCommit}" Margin="1"></Button>
                <Label Grid.Row="3" Grid.Column="0" Content="Available"></Label>
                <TreeView Grid.Row="4" Grid.Column="0" Grid.RowSpan="2"
                          x:Name="tvwTeamMembers"
                          ItemsSource="{Binding Path=Teams}" >
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
                <StackPanel Grid.Column="1" Grid.Row="4" Grid.RowSpan="2"
                            Orientation="Vertical" VerticalAlignment="Center">
                    <Button Command="{Binding DoAddTop}" Content="Add Top >" 
                            CommandParameter="{Binding ElementName=tvwTeamMembers, Path=SelectedItem}"></Button>
                    <Button Command="{Binding DoAddAbove}" Content="Add Before >" 
                            CommandParameter="{Binding ElementName=tvwTeamMembers, Path=SelectedItem}"></Button>
                    <Button Command="{Binding DoAddBelow}" Content="Add After >" 
                            CommandParameter="{Binding ElementName=tvwTeamMembers, Path=SelectedItem}"></Button>
                    <Separator Margin="0,8"></Separator>
                    <Button Command="{Binding DoRemove}" Content="&lt; Remove"></Button>
                </StackPanel>
                <Label Grid.Row="3" Grid.Column="2" Content="Order After"></Label>
                <ListBox Grid.Row="4" Grid.Column="2" 
                         ItemsSource="{Binding Path=Ordering}" SelectedItem="{Binding Path=SelectedOrder}">
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type uipvm:NeedsTurnTickAddCreatureOrder}">
                            <ContentControl Content="{Binding CreatureTrackerModel}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type uipvm:NeedsTurnTickExistingTickOrder}">
                            <ItemsControl BorderBrush="Black" BorderThickness="1"
                                          DataContext="{Binding TickInfo}"
                                          ItemsSource="{Binding Budgets}"></ItemsControl>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
                <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="5" HorizontalAlignment="Right">
                    <Button Command="{Binding DoMoveUp}" Content="&#x25B2;" ToolTip="Move item up"></Button>
                    <Button Command="{Binding DoMoveDown}" Content="&#x25BC;" ToolTip="Move item up"></Button>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:PromptTurnTrackerMode}">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50,*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="50,*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50,*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" 
                           FontSize="24" Text="Start Turn Tracker"></TextBlock>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center">
                    <Run Text="Time:" FontWeight="Bold"/>
                    <Run DataContext="{Binding Path=Tracker}" 
                         Text="{Binding Path=CurrentTime}"/>
                </TextBlock>
                <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <Button Content="Start" Margin="4,2" ToolTip="Start tracker by rolling for initiative"
                            Command="{Binding Path=DoCommit}"></Button>
                    <Button Content="Avoid" Margin="4,2" ToolTip="Avoid starting turn tracker"
                            Command="{Binding Path=DoCancel}"></Button>
                </StackPanel>
                <Grid Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Stand Down Group"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Available Groups"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding StandDownGroupName, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsGroupNameEnabled}"></TextBox>
                    <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding StandDownGroups}" SelectedItem="{Binding SelectedStandDownGroup}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type uic:StandDownGroupInfo}">
                                <TextBlock Text="{Binding GroupName}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Content="Stand Down" Margin="1" Command="{Binding DoStandDown}"/>
                </Grid>
                <Label Grid.Row="3" Grid.Column="0" Content="Available"></Label>
                <TreeView Grid.Row="4" Grid.Column="0"
                          x:Name="tvwTeamMembers"
                          ItemsSource="{Binding Path=Teams}" >
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                         Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Black" />
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" 
                                                  Command="{Binding TickTrackerMode.DoAdd}" 
                                                  CommandParameter="{Binding}"/>
                                </StackPanel.InputBindings>
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}" />
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Needs Tick" IsChecked="{Binding Path=NeedsTurnTick, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="In Tracker" IsChecked="{Binding Path=IsInTracker, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                            </StackPanel>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type uipvm:TeamGroupModel}"
                                                  ItemsSource="{Binding Path=Creatures}">
                            <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" 
                                                  Command="{Binding TickTrackerMode.DoAdd}" 
                                                  CommandParameter="{Binding}"/>
                                </Border.InputBindings>
                                <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
                            </Border>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
                <StackPanel Grid.Column="1" Grid.Row="4"
                            Orientation="Vertical" VerticalAlignment="Center">
                    <Button Command="{Binding DoAdd}" Content="Add &gt;" 
                            CommandParameter="{Binding ElementName=tvwTeamMembers, Path=SelectedItem}"></Button>
                    <Separator></Separator>
                    <Button Command="{Binding DoRemove}" Content="&lt; Remove"
                            CommandParameter="{Binding ElementName=lstInitial, Path=SelectedItem}"></Button>
                </StackPanel>
                <Label Grid.Row="3" Grid.Column="2" Content="Ticks"></Label>
                <ListBox Grid.Row="4" Grid.Column="2" x:Name="lstInitial"
                         ItemsSource="{Binding Path=Initial}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" 
                                                  Command="{Binding TickTrackerMode.DoRemove}" 
                                                  CommandParameter="{Binding}"/>
                                </StackPanel.InputBindings>
                                <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}" />
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <CheckBox IsEnabled="False" Content="Needs Tick" IsChecked="{Binding Path=NeedsTurnTick, Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" Content="In Tracker" IsChecked="{Binding Path=IsInTracker, Mode=OneWay}"/>
                                </StackPanel>
                                <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                           DataContext="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:TimelinePendingTickMode}">
            <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TabItem Header="Timeline Manager" IsSelected="True">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.Resources>
                            <CollectionViewSource x:Key="cvsCreatures" Source="{Binding Path=Creatures}">
                                <CollectionViewSource.GroupDescriptions>
                                    <PropertyGroupDescription PropertyName="Group"></PropertyGroupDescription>
                                </CollectionViewSource.GroupDescriptions>
                            </CollectionViewSource>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="50,*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                   FontSize="24" Text="Timeline Manager"/>
                        <TextBlock Grid.Row="1" 
                                   VerticalAlignment="Center">
                            <Run Text="Time:" FontWeight="Bold"/>
                            <Run DataContext="{Binding Path=Tracker}" 
                                 Text="{Binding Path=CurrentTime}"/>
                        </TextBlock>
                        <Grid Grid.Row="2" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50,*"/>
                                <ColumnDefinition Width="50,*"/>
                                <ColumnDefinition Width="50,*"/>
                                <ColumnDefinition Width="50,*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <CheckBox Grid.Row="0" Grid.Column="2"
                                      DataContext="{Binding Path=MasterModel}" Content="Paused" 
                                      IsChecked="{Binding Path=Proxies.IsPaused, Mode=OneWay}" ></CheckBox>
                            <Button Grid.Row="1" Grid.Column="0" Margin="4,1"
                                    Content="All Act"
                                    Command="{Binding Path=DoActAll}"/>
                            <Button Grid.Row="1" Grid.Column="1" 
                                    DataContext="{Binding Path=MasterModel}" Content="Push Time" 
                                    Command="{Binding Path=DoPushTimeTick}" Margin="4,1"></Button>
                            <Button Grid.Row="1" Grid.Column="2" 
                                    DataContext="{Binding Path=MasterModel}" Content="Pause" 
                                    Command="{Binding Path=DoTogglePause}" Margin="4,1"></Button>
                            <Button Grid.Row="1" Grid.Column="3" Margin="4,1"
                                    Content="Clear All"
                                    Command="{Binding Path=DoClearAll}"/>
                        </Grid>
                        <Label Grid.Row="3" Content="Actors"></Label>
                        <DataGrid Grid.Row="4" Margin="1,1" x:Name="lvwTeams" HorizontalAlignment="Stretch"
                                  RowHeaderWidth="0"
                                  GridLinesVisibility="None"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  MinRowHeight="56"
                                  ItemsSource="{Binding Source={StaticResource cvsCreatures}}">
                            <DataGrid.Resources>
                                <DataTemplate DataType="{x:Type uipvm:ActivityInfoBuilder}">
                                    <uicui:ActivityInfoBuildControl DataContext="{Binding}" ></uicui:ActivityInfoBuildControl>
                                </DataTemplate>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Style>
                                <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Creature">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type uipvm:CreatureTimelinePendingModel}">
                                            <ContentControl Content="{Binding Path=CreatureTrackerInfo.CreatureLoginInfo}"
                                                            VerticalAlignment="Center">
                                                <ContentControl.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick"
                                                                  Command="{Binding Path=TickTrackerMode.TimeTickMode.DoControl}"
                                                                  CommandParameter="{Binding Path=CreatureTrackerInfo}"/>
                                                </ContentControl.InputBindings>
                                            </ContentControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Held" MinWidth="96">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type uipvm:CreatureTimelinePendingModel}">
                                            <StackPanel Orientation="Vertical" Grid.Column="1" Visibility="{Binding HeldActivityVisibility}">
                                                <TextBlock>
                                                    <Run Text="Activity:" FontWeight="Bold"/>
                                                    <Run Text="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo.HeldActivity.DisplayName}"/>
                                                </TextBlock>
                                                <TextBlock Visibility="{Binding HeldActivityDescriptionVisibility}" >
                                                    <Run Text="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo.HeldActivity.Description}"/>
                                                </TextBlock>
                                                <TextBlock FontStyle="Italic">
                                                    <Run Text="{Binding Path=CreatureTrackerInfo.LocalActionBudgetInfo.HoldTimeRemaining}"/>
                                                    <Run Text="more rounds"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Action" MinWidth="144">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type uipvm:CreatureTimelinePendingModel}">
                                            <Menu ItemsSource="{Binding Path=ActionMenu}" VerticalAlignment="Center">
                                                <Menu.Resources>
                                                    <uicui:ImageryIcon x:Key="menuIcon"
                                                                       DataContext="{Binding Path=IconSource}"
                                                                       ImageryInfo="{Binding Path=Icon}"
                                                                       IconResolver="{Binding Path=IconResolver}"
                                                                       x:Shared="false"></uicui:ImageryIcon>
                                                </Menu.Resources>
                                                <Menu.ItemContainerStyleSelector>
                                                    <uipvm:MenuViewModelStyleSelector>
                                                        <uipvm:MenuViewModelStyleSelector.IconMenu>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                                <Setter Property="MinHeight" Value="28"/>
                                                            </Style>
                                                        </uipvm:MenuViewModelStyleSelector.IconMenu>
                                                        <uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                                <Setter Property="MinHeight" Value="28"/>
                                                            </Style>
                                                        </uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                                        <uipvm:MenuViewModelStyleSelector.Separator>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Separator Margin="24,2,8,2" >
                                                                                <Separator.Style>
                                                                                    <Style TargetType="{x:Type Separator}" 
                                                                                           BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}"/>
                                                                                </Separator.Style>
                                                                            </Separator>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </uipvm:MenuViewModelStyleSelector.Separator>
                                                    </uipvm:MenuViewModelStyleSelector>
                                                </Menu.ItemContainerStyleSelector>
                                            </Menu>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Builder" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl Margin="4" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                                                            Content="{Binding Path=ActivityInfoBuilder}">
                                            </ContentControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                            <DataGrid.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Time Flow">
                    <ContentControl Content="{Binding TimeTickMode}">
                    </ContentControl>
                </TabItem>
            </TabControl>
        </DataTemplate>
    </UserControl.Resources>
    <ContentControl HorizontalAlignment="Stretch" 
                    Content="{Binding Path=TickTrackerMode}"></ContentControl>
</UserControl>
