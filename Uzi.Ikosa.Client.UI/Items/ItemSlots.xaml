<UserControl x:Class="Uzi.Ikosa.Client.UI.ItemSlots"
             xmlns:pvm="clr-namespace:Uzi.Ikosa.Proxy.ViewModel;assembly=Uzi.Ikosa.Proxy"
             xmlns:uicui="clr-namespace:Uzi.Ikosa.Client.UI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" >
    <DockPanel>
        <DockPanel.Resources>
            <Style TargetType="TextBlock" x:Key="styleTextBlockHover">
                <Setter Property="Background" Value="LightGray"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="Cyan"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock" x:Key="styleTBHeader">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="9"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Padding" Value="1,0"/>
                <Setter Property="Background" Value="DarkKhaki"/>
            </Style>
            <Style TargetType="Border">
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Background" Value="LightGoldenrodYellow"/>
                <Setter Property="BorderBrush" Value="Brown"/>
                <Setter Property="BorderThickness" Value="2,1,2,2"/>
            </Style>
        </DockPanel.Resources>
        <!-- Carrying Capacity and Encumberance -->

        <Border x:Name="grpCarrying" DockPanel.Dock="Top"
                DataContext="{Binding Path=CreatureModel.CreatureInfo}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,1,4,1"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30,*"/>
                    <ColumnDefinition Width="10,*"/>
                    <ColumnDefinition Width="30,*"/>
                    <ColumnDefinition Width="10,*"/>
                    <ColumnDefinition Width="30,*"/>
                    <ColumnDefinition Width="10,*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="0" Grid.Column="0">Light Limit</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="1" Grid.Column="0">Med Limit</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="2" Grid.Column="0">Max Load</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="0" Grid.Column="2">Over Head</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="1" Grid.Column="2">Off Ground</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="2" Grid.Column="2">Push/Drag</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="0" Grid.Column="4">Curr Load</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="1" Grid.Column="4">Max Dex</TextBlock>
                <TextBlock Style="{StaticResource styleTBHeader}" Grid.Row="2" Grid.Column="4">Check Pen</TextBlock>

                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=CarryingCapacity.LightLoadLimit}"></TextBlock>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=CarryingCapacity.MediumLoadLimit}"></TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Path=CarryingCapacity.HeavyLoadLimit}"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding Path=CarryingCapacity.LiftOverHeadLimit}"></TextBlock>
                <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding Path=CarryingCapacity.LiftOffGroundLimit}"></TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="3" Text="{Binding Path=CarryingCapacity.PushOrDragLimit}"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="5" Text="{Binding Path=LoadWeight}"></TextBlock>
                <TextBlock Grid.Row="1" Grid.Column="5" Text="{Binding Path=MaxDexterityToArmorRating}"></TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="5" Text="{Binding Path=Encumberance.Value}"></TextBlock>
            </Grid>
        </Border>
        <ListView x:Name="lstSlots" ContextMenuOpening="lstSlots_ContextMenuOpening" ItemsSource="{Binding Path=ItemSlots}">
            <ListView.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <DataTemplate DataType="{x:Type pvm:ContentStack}">
                            <ItemsControl ItemsSource="{Binding Path=Contents}" VerticalAlignment="Center">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding Path=Orientation}"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type pvm:SeparatorViewModel}">
                            <Separator></Separator>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type pvm:MenuViewModel}" ItemsSource="{Binding Path=SubItems}">
                        </HierarchicalDataTemplate>
                        <uicui:ImageryIcon x:Key="menuIcon"
                                                   DataContext="{Binding Path=IconSource}"
                                                   ImageryInfo="{Binding Path=Icon}"
                                                   IconResolver="{Binding Path=IconResolver}"
                                                   x:Shared="false"></uicui:ImageryIcon>
                    </ContextMenu.Resources>
                    <ContextMenu.ItemContainerStyleSelector>
                        <pvm:MenuViewModelStyleSelector>
                            <pvm:MenuViewModelStyleSelector.IconMenu>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                                    <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                    <Setter Property="Header" Value="{Binding Path=Header}"/>
                                    <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                    <Setter Property="Command" Value="{Binding Path=Command}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                </Style>
                            </pvm:MenuViewModelStyleSelector.IconMenu>
                            <pvm:MenuViewModelStyleSelector.NoIconMenu>
                                <Style TargetType="MenuItem">
                                    <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                    <Setter Property="Header" Value="{Binding Path=Header}"/>
                                    <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                    <Setter Property="Command" Value="{Binding Path=Command}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                </Style>
                            </pvm:MenuViewModelStyleSelector.NoIconMenu>
                            <pvm:MenuViewModelStyleSelector.Separator>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Separator Margin="24,2,8,2" >
                                                    <Separator.Style>
                                                        <Style TargetType="{x:Type Separator}" 
                                                               BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}"/>
                                                    </Separator.Style>
                                                </Separator>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </pvm:MenuViewModelStyleSelector.Separator>
                        </pvm:MenuViewModelStyleSelector>
                    </ContextMenu.ItemContainerStyleSelector>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Path=SlotType}"/>
                        <GridViewColumn Header="SubType" DisplayMemberBinding="{Binding Path=SubType}"/>
                        <GridViewColumn Header="Item">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding Path=ItemInfo}"
                                                    ContentTemplateSelector="{DynamicResource slctItemListTemplate}">
                                    </ContentControl>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</UserControl>
