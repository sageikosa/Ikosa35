<Window x:Class="Uzi.Ikosa.Client.ActorView"
        xmlns:client="clr-namespace:Uzi.Ikosa.Client"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:uipvm="clr-namespace:Uzi.Ikosa.Proxy.ViewModel;assembly=Uzi.Ikosa.Proxy"
        xmlns:uicui="clr-namespace:Uzi.Ikosa.Client.UI;assembly=Uzi.Ikosa.Client.UI"
        xmlns:icontract="clr-namespace:Uzi.Ikosa.Contracts;assembly=Uzi.Ikosa.Contracts"
        xmlns:ccontract="clr-namespace:Uzi.Core.Contracts;assembly=Uzi.Core.Contracts"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        KeyboardNavigation.TabNavigation="None"
        KeyboardNavigation.DirectionalNavigation="None"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Icon="IkosaClient.ico" 
        Title="ActorView" Height="600" Width="1000">
    <Window.InputBindings>
        <KeyBinding Key="F2" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcView}"/>
        <KeyBinding Key="F3" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcCharacter}"/>
        <KeyBinding Key="F4" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcSkills}"/>
        <KeyBinding Key="F5" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcAdditional}"/>
        <KeyBinding Key="F6" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcInventory}"/>
        <KeyBinding Key="F7" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcAwareness}"/>
        <KeyBinding Key="F8" Command="{x:Static client:ActorView.ShowToolWindow}" CommandParameter="{Binding ElementName=tcLog}"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static client:ActorView.ShowToolWindow}" 
                        x:Name="cdShowToolWindow" CanExecute="cdShowToolWindow_CanExecute" Executed="cdShowToolWindow_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <Image Source="/Images/script.png" x:Key="imgLog"/>
        <Image Source="/Images/connect.png" x:Key="imgLogin"/>
        <Image Source="/Images/disconnect.png" x:Key="imgLogout"/>
        <Image Source="/Images/folder_user.png" x:Key="imgSelf"/>
        <Image Source="/Images/folder_wrench.png" x:Key="imgOptions"/>
        <Image Source="/Images/eye.png" x:Key="imgAwareness"/>
        <Image Source="/Images/wrench.png" x:Key="imgItemSlots"/>
        <Image Source="/Images/briefcase.png" x:Key="imgInventory"/>
        <DataTemplate DataType="{x:Type uipvm:ContentStack}">
            <ItemsControl ItemsSource="{Binding Path=Contents}" VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="{Binding Path=Orientation}"></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:SeparatorViewModel}">
            <Separator></Separator>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type uipvm:MenuViewModel}" ItemsSource="{Binding Path=SubItems}">
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabControl" SelectionChanged="tabControl_SelectionChanged" >
            <TabItem x:Name="tcView" Header="View">
                <DockPanel x:Name="dockLocale" MouseDown="dockLocale_MouseDown">
                    <DockPanel.Resources>
                        <DataTemplate DataType="{x:Type icontract:AwarenessInfo}">
                            <ContentControl Content="{Binding Path=Info}"
                                            ContentTemplateSelector="{DynamicResource slctItemListTemplate}">
                            </ContentControl>
                        </DataTemplate>
                        <uicui:ImageryIcon x:Key="menuIcon"
                                            DataContext="{Binding Path=IconSource}"
                                            ImageryInfo="{Binding Path=Icon}"
                                            IconResolver="{Binding Path=IconResolver}"
                                            x:Shared="false"/>
                    </DockPanel.Resources>
                    <DockPanel.InputBindings>
                        <!-- Awareness Cycle -->
                        <KeyBinding Command="{Binding Path=ObservableActor.DoNextAwareness}" Gesture="OemMinus" />
                        <KeyBinding Command="{Binding Path=ObservableActor.DoPrevAwareness}" Gesture="OemPlus" />
                        <KeyBinding Command="{Binding Path=ObservableActor.DoClearTargets}" Gesture="Back" />

                        <!-- Look Around -->
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Key="Down"  CommandParameter="Down" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Key="Up"    CommandParameter="Up"   />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Key="Left"  CommandParameter="Left" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Key="Right" CommandParameter="Right"/>
                        
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Gesture="Ctrl+Down"  CommandParameter="BoardDown" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Gesture="Ctrl+Up"    CommandParameter="BoardUp"   />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Gesture="Ctrl+Left"  CommandParameter="BoardLeft" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.LookTurn}" Gesture="Ctrl+Right" CommandParameter="BoardRight"/>

                        <!-- Camera Adjustments -->
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.GazeCommand}" Gesture="Ctrl+Home" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.ViewFieldChange}" CommandParameter="Home" Key="Home" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.ViewFieldChange}" CommandParameter="Prev" Key="Prior" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.ViewFieldChange}" CommandParameter="Next" Key="Next" />
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.ToggleSounds}" Gesture="Ctrl+OemTilde"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.LocaleViewModel.ToggleMarkers}" Gesture="Ctrl+D1"/>

                        <!-- Movement -->
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=0,UpDownAdjust=0}" Key="W"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=4,UpDownAdjust=0}" Key="X"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=2,UpDownAdjust=0}" Key="A"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=6,UpDownAdjust=0}" Key="D"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=1,UpDownAdjust=0}" Key="Q"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=7,UpDownAdjust=0}" Key="E"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=3,UpDownAdjust=0}" Key="Z"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=5,UpDownAdjust=0}" Key="C"/>
                        <KeyBinding Command="{Binding Path=ObservableActor.DoResetTargetPointer}" Key="S" />

                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=0,UpDownAdjust=1}" Key="W"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=4,UpDownAdjust=1}" Key="X"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=2,UpDownAdjust=1}" Key="A"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=6,UpDownAdjust=1}" Key="D"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=1,UpDownAdjust=1}" Key="Q"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=7,UpDownAdjust=1}" Key="E"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=3,UpDownAdjust=1}" Key="Z"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=5,UpDownAdjust=1}" Key="C"/>
                        <KeyBinding Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=8,UpDownAdjust=2}" Key="S"/>

                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=0,UpDownAdjust=-1}" Key="W"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=4,UpDownAdjust=-1}" Key="X"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=2,UpDownAdjust=-1}" Key="A"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=6,UpDownAdjust=-1}" Key="D"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=1,UpDownAdjust=-1}" Key="Q"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=7,UpDownAdjust=-1}" Key="E"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=3,UpDownAdjust=-1}" Key="Z"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=5,UpDownAdjust=-1}" Key="C"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MoveCommand}" CommandParameter="{uipvm:MoveParam Heading=8,UpDownAdjust=-2}" Key="S"/>

                        <!-- Shift Movement -->
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=0,UpDownAdjust=0}" Key="W"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=4,UpDownAdjust=0}" Key="X"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=2,UpDownAdjust=0}" Key="A"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=6,UpDownAdjust=0}" Key="D"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=1,UpDownAdjust=0}" Key="Q"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=7,UpDownAdjust=0}" Key="E"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=3,UpDownAdjust=0}" Key="Z"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftCommand}" CommandParameter="{uipvm:MoveParam Heading=5,UpDownAdjust=0}" Key="C"/>
                        <KeyBinding Modifiers="Ctrl+Shift" Command="{Binding Path=ObservableActor.MovementCommands.ShiftFacingCommand}" Key="S" />

                        <!-- Special Movement -->
                        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.DropProneCommand}"     />
                        <KeyBinding Key="U" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.StandUpCommand}"       />
                        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.TumbleCommand}"        />
                        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.OverrunCommand}"       />
                        <KeyBinding Key="K" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.CrawlCommand}"         />
                        <KeyBinding Key="D3" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.MultiStepMoveCommand}" />
                        <KeyBinding Key="D2" Modifiers="Ctrl" Command="{Binding Path=ObservableActor.MovementCommands.JumpDownCommand}"      />
                        <KeyBinding Key="D2" Modifiers="Shift" Command="{Binding Path=ObservableActor.MovementCommands.HopUpCommand}"         />

                        <!-- Movement Selection -->
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.PrevMoveCommand}" Key="OemComma" />
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.NextMoveCommand}" Key="OemPeriod" />
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.PrevStartCommand}" Modifiers="Shift" Key="OemComma" />
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.NextStartCommand}" Modifiers="Shift" Key="OemPeriod" />
                        <KeyBinding Command="{Binding Path=ObservableActor.MovementCommands.UseDoubleCommand}" Key="OemSemicolon" />

                        <!-- Turn and Initiative -->
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=DoEndTurn}" Key="End"/>

                        <!-- Aim Adjustments -->
                        <KeyBinding Command="{Binding Path=ObservableActor.DoAdjustAimPoint}" Key="Insert"/>
                        <KeyBinding Modifiers="Ctrl" Command="{Binding Path=ObservableActor.DoAimExtent}" Key="Insert"/>

                        <!-- Aim Modes -->
                        <KeyBinding Key="F9"  Command="{Binding Path=ObservableActor.DoAdjustTargetPointer}"/>
                        <KeyBinding Key="F9"  Command="{Binding Path=ObservableActor.DoHideTargetPointer}" Modifiers="Ctrl"/>
                        <KeyBinding Key="F11" Command="{Binding Path=ObservableActor.DoResetTargetPointer}" />
                        <KeyBinding Key="F11" Command="{Binding Path=ObservableActor.DoClearTargets}" Modifiers="Ctrl" />
                        <KeyBinding Key="F12" Command="{Binding Path=ObservableActor.DoQueueTargetPointer}" />
                    </DockPanel.InputBindings>
                    <uicui:LocalActionPanel DockPanel.Dock="Bottom" 
                                            AimPointActivation="{Binding Path=ObservableActor.AimPointActivation}"
                                            x:Name="mnuLocalAction" Budget="{Binding Path=Budget}"/>
                    <Grid>
                        <uicui:LocaleViewer x:Name="viewMainSensor" Focusable="True" IsTabStop="True"
                                            DataContext="{Binding Path=ObservableActor}"
                                            ViewPointType="{Binding Path=LocaleViewModel.ViewPointType}"
                                            ViewPointState="{Binding Path=LocaleViewModel.ViewPointState}"
                                            SensorHost="{Binding Path=LocaleViewModel.Sensors}"
                                            SelectedPresentations="{Binding Path=LocaleViewModel.SelectedPresentations}"
                                            LocaleViewModel="{Binding Path=LocaleViewModel}"
                                            QueuedLocations="{Binding Path=QueuedLocations}"
                                            QueuedPoints="{Binding Path=QueuedPoints}"
                                            TargetCell="{Binding Path=LocaleViewModel.TargetCell}"
                                            ShowSounds="{Binding Path=LocaleViewModel.ShowSounds}"
                                            ShowExtraMarkers="{Binding Path=LocaleViewModel.ShowExtraMarkers}"
                                            ShowOverlay="{Binding Path=LocaleViewModel.ShowOverlay}" />
                        <DockPanel >
                            <!-- target queue -->
                            <StackPanel DockPanel.Dock="Right" DataContext="{Binding Path=ObservableActor}"
                                        Visibility="{Binding Path=QueuedTargetVisibility}" VerticalAlignment="Stretch" 
                                        Margin="4" Background="#A0808080">
                                <Button Command="{Binding Path=DoClearTargets}" Content="Clear Targets" Margin="1"/>
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                                    <ItemsControl ItemsSource="{Binding Path=QueuedTargets}">
                                        <ItemsControl.Resources>
                                            <Style TargetType="TextBlock" x:Key="styleTextBlockHover">
                                                <Setter Property="Background" Value="LightGray"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Background" Value="Cyan"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                            <DataTemplate DataType="{x:Type uipvm:QueuedAwareness}">
                                                <Border Background="#FFA0A0A0" Margin="2" HorizontalAlignment="Stretch" 
                                                        VerticalAlignment="Stretch">
                                                    <ContentControl Content="{Binding Path=Awareness}">
                                                        <ContentControl.ContextMenu>
                                                            <ContextMenu ItemsSource="{Binding Path=ContextMenu}">
                                                                <ContextMenu.Resources>
                                                                    <DataTemplate DataType="{x:Type uipvm:ContentStack}">
                                                                        <ItemsControl ItemsSource="{Binding Path=Contents}" 
                                                                                      VerticalAlignment="Center">
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <StackPanel Orientation="{Binding Path=Orientation}"/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                        </ItemsControl>
                                                                    </DataTemplate>
                                                                    <DataTemplate DataType="{x:Type uipvm:SeparatorViewModel}">
                                                                        <Separator></Separator>
                                                                    </DataTemplate>
                                                                    <HierarchicalDataTemplate DataType="{x:Type uipvm:MenuViewModel}" 
                                                                                              ItemsSource="{Binding Path=SubItems}">
                                                                    </HierarchicalDataTemplate>
                                                                </ContextMenu.Resources>
                                                                <ContextMenu.ItemContainerStyleSelector>
                                                                    <uipvm:MenuViewModelStyleSelector>
                                                                        <uipvm:MenuViewModelStyleSelector.IconMenu>
                                                                            <Style TargetType="MenuItem">
                                                                                <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                                                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                                            </Style>
                                                                        </uipvm:MenuViewModelStyleSelector.IconMenu>
                                                                        <uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                                                            <Style TargetType="MenuItem">
                                                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                                            </Style>
                                                                        </uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                                                        <uipvm:MenuViewModelStyleSelector.Separator>
                                                                            <Style TargetType="MenuItem">
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Separator Margin="24,2,8,2" >
                                                                                                <Separator.Style>
                                                                                                    <Style TargetType="{x:Type Separator}" 
                                                                                                       BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}"/>
                                                                                                </Separator.Style>
                                                                                            </Separator>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </uipvm:MenuViewModelStyleSelector.Separator>
                                                                    </uipvm:MenuViewModelStyleSelector>
                                                                </ContextMenu.ItemContainerStyleSelector>
                                                            </ContextMenu>
                                                        </ContentControl.ContextMenu>
                                                    </ContentControl>
                                                </Border>                                            
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type uipvm:QueuedIntersection}">
                                                <uicui:IntersectPointer SourcePoint="{Binding Path=ObservableActor.LocaleViewModel.Sensors.AimPoint3D}"
                                                                        TargetCell="{Binding Path=Location}"
                                                                        DownFace="{Binding Path=ObservableActor.LocaleViewModel.Sensors.GravityAnchorFace}"
                                                                        Heading="{Binding Path=ObservableActor.LocaleViewModel.Sensors.Heading}"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type uipvm:QueuedCell}">
                                                <uicui:CellPointer SourceCell="{Binding Path=ObservableActor.LocaleViewModel.Sensors.AimCell}"
                                                                   TargetCell="{Binding Path=Location}"
                                                                   DownFace="{Binding Path=ObservableActor.LocaleViewModel.Sensors.GravityAnchorFace}"
                                                                   Heading="{Binding Path=ObservableActor.LocaleViewModel.ForwardHeading}"/>
                                            </DataTemplate>
                                        </ItemsControl.Resources>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </ScrollViewer>
                            </StackPanel>
                            
                            <!-- action menu -->
                            <Menu DockPanel.Dock="Top" DataContext="{Binding Path=ObservableActor}" 
                                  Background="#00000000" Margin="2" ItemsSource="{Binding Path=TopActions}">
                                <Menu.Resources>
                                    <DataTemplate DataType="{x:Type icontract:AwarenessInfo}">
                                        <ContentControl Content="{Binding Path=Info}"
                                                        ContentTemplateSelector="{DynamicResource menuItemListTemplate}">
                                        </ContentControl>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type uipvm:ActorModel}">
                                        <Grid>
                                            <Image Source="{Binding Path=CreatureLoginInfo.Portrait.Image}" 
                                                   Width="48" Height="48" Opacity="0.8"/>
                                            <ProgressBar DataContext="{Binding Path=CreatureModel.HealthBar}" 
                                                         Width="48" Height="6" VerticalAlignment="Bottom"
                                                         Opacity="0.6"
                                                         Background="{Binding Path=Background}"
                                                         Foreground="{Binding Path=Foreground}"
                                                         Minimum="{Binding Path=Minimum}" 
                                                         Maximum="{Binding Path=Maximum}" 
                                                         Value="{Binding Path=Current, Mode=OneWay}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Menu.Resources>
                                <Menu.ItemContainerStyleSelector>
                                    <uipvm:MenuViewModelStyleSelector>
                                        <uipvm:MenuViewModelStyleSelector.IconMenu>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                <Setter Property="MinHeight" Value="28"/>
                                            </Style>
                                        </uipvm:MenuViewModelStyleSelector.IconMenu>
                                        <uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                                                <Setter Property="Header" Value="{Binding Path=Header}"/>
                                                <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                                                <Setter Property="Command" Value="{Binding Path=Command}"/>
                                                <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                                                <Setter Property="MinHeight" Value="28"/>
                                            </Style>
                                        </uipvm:MenuViewModelStyleSelector.NoIconMenu>
                                        <uipvm:MenuViewModelStyleSelector.Separator>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Separator Margin="24,2,8,2" >
                                                                <Separator.Style>
                                                                    <Style TargetType="{x:Type Separator}" 
                                                                           BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}"/>
                                                                </Separator.Style>
                                                            </Separator>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </uipvm:MenuViewModelStyleSelector.Separator>
                                    </uipvm:MenuViewModelStyleSelector>
                                </Menu.ItemContainerStyleSelector>
                            </Menu>
                            
                            <!-- prerequisite panel -->
                            <DockPanel DockPanel.Dock="Bottom">
                                <TextBlock DataContext="{Binding Path=Proxies}" 
                                           Visibility="{Binding Path=WaitingOnVisibility}"
                                           DockPanel.Dock="Bottom" Text="Waiting..." 
                                           ToolTipService.ShowDuration="10000">
                                    <TextBlock.ToolTip>
                                        <ItemsControl ItemsSource="{Binding Path=WaitList}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                                <uicui:PrerequisitePanel Margin="4" Opacity="0.9" Background="#FF808080"
                                                         HorizontalAlignment="Left" DockPanel.Dock="Bottom"
                                                         FocusManager.IsFocusScope="True" 
                                                         DataContext="{Binding Path=Prerequisites}"/>
                            </DockPanel>
                            
                            <!-- furnishing movement commands -->
                            <uicui:FurnishingCommands DockPanel.Dock="Bottom" DataContext="{Binding Path=FurnishingActions}" 
                                                      Opacity="0.9" Margin="2"
                                                      HorizontalAlignment="Center"
                                                      Visibility="{Binding Path=Visibility}"></uicui:FurnishingCommands>
                            
                            <!-- activity builder -->
                            <ScrollViewer DockPanel.Dock="Top" DataContext="{Binding Path=ObservableActor}"
                                          Opacity="0.8" Background="#FF808080" VerticalAlignment="Top"
                                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"                                            
                                          Visibility="{Binding Path=BuilderVisible}" >
                                <uicui:ActivityInfoBuildControl Margin="4" VerticalAlignment="Top" 
                                                                DataContext="{Binding Path=ActivityInfoBuilder}"/>
                            </ScrollViewer>
                        </DockPanel>
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tcCharacter" Header="Character">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <StackPanel Orientation="Vertical">
                        <uicui:CharacterInfo DataContext="{Binding}" 
                                             Margin="0,0,2,0" />
                        <uicui:AdditionalCharInfo DataContext="{Binding}" 
                                                  Actions="{Binding Path=Actions}" 
                                                  Margin="2,0,0,0"
                                                  FocusManager.IsFocusScope="True" />
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem x:Name="tcSkills" Header="Skills">
                <uicui:SkillSheetActive DataContext="{Binding}" Margin="2"/>
            </TabItem>
            <TabItem x:Name="tcAdditional" Header="Additional" Background="Silver">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                    <uicui:AdditionalInfo DataContext="{Binding}" Margin="2"/>
                </ScrollViewer>
            </TabItem>
            <TabItem x:Name="tcInventory" Header="Inventory" Background="Silver">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <uicui:ItemSlots Grid.Column="0"
                                     Background="#FF808080" 
                                     DataContext="{Binding}"
                                     DoActionCommand="{Binding Path=DoAction}"
                                     FocusManager.IsFocusScope="True" />
                    <uicui:Inventory Grid.Column="1"
                                     Background="#FF808080" 
                                     FocusManager.IsFocusScope="True" 
                                     DataContext="{Binding}"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tcAwareness" Header="Awareness" Background="Silver">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <uicui:Awareness Grid.Column="0"
                                     Background="#FF808080" 
                                     AwarenessInfos="{Binding Path=Awarenesses}"
                                     SelectedAwarenesses="{Binding Path=SelectedAwarenesses}"
                                     FocusManager.IsFocusScope="True" 
                                     DataContext="{Binding Path=ObservableActor}"/>
                    <!-- sound/ExtraInfo awareness selection -->
                </Grid>
            </TabItem>
            <TabItem x:Name="tcLog" Header="Log" Background="Silver">
                <uicui:LogOutput Background="#FF101010" 
                                 DataContext="{Binding Path=ObservableActor}" 
                                 SysNotifies="{Binding Path=Notifies}">
                </uicui:LogOutput>
                <!--<uicui:LogItems Background="#FF808080" 
                                DataContext="{Binding}"
                                Proxies="{Binding Path=Proxies}"                                                     
                                FocusManager.IsFocusScope="True"/>-->
            </TabItem>
        </TabControl>
    </Grid>
</Window>
