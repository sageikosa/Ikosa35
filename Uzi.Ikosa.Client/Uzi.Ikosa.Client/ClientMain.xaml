<Window x:Class="Uzi.Ikosa.Client.ClientMain"
        xmlns:client="clr-namespace:Uzi.Ikosa.Client"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:uip="clr-namespace:Uzi.Ikosa.Proxy;assembly=Uzi.Ikosa.Proxy"
        xmlns:uipvm="clr-namespace:Uzi.Ikosa.Proxy.ViewModel;assembly=Uzi.Ikosa.Proxy"
        xmlns:uicui="clr-namespace:Uzi.Ikosa.Client.UI;assembly=Uzi.Ikosa.Client.UI"
        xmlns:icontract="clr-namespace:Uzi.Ikosa.Contracts;assembly=Uzi.Ikosa.Contracts"
        xmlns:ich="clr-namespace:Uzi.Ikosa.Contracts.Host;assembly=Uzi.Ikosa.Contracts"
        xmlns:ccontract="clr-namespace:Uzi.Core.Contracts;assembly=Uzi.Core.Contracts"
        xmlns:xct="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        Icon="IkosaClient.ico" 
        Title="Ikosa Test Client" Height="480" Width="640">
    <Window.Resources>
        <Image Source="/Images/script.png" x:Key="imgLog"/>
        <Image Source="/Images/connect.png" x:Key="imgLogin"/>
        <Image Source="/Images/disconnect.png" x:Key="imgLogout"/>
        <Image Source="/Images/user_add.png" x:Key="imgAddActor"/>
        <Image Source="/Images/user_delete.png" x:Key="imgDropActor"/>
        <Image Source="/Images/comments.png" x:Key="imgMessages"/>
        <Image Source="/Images/folder_user.png" x:Key="imgSelf"/>
        <Image Source="/Images/folder_wrench.png" x:Key="imgOptions"/>
        <Image Source="/Images/eye.png" x:Key="imgAwareness"/>
        <Image Source="/Images/wrench.png" x:Key="imgItemSlots"/>
        <Image Source="/Images/briefcase.png" x:Key="imgInventory"/>
        <DataTemplate DataType="{x:Type uipvm:ContentStack}">
            <ItemsControl ItemsSource="{Binding Path=Contents}" VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="{Binding Path=Orientation}"></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:SeparatorViewModel}">
            <Separator></Separator>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type uipvm:MenuViewModel}" ItemsSource="{Binding Path=SubItems}">
        </HierarchicalDataTemplate>
        <uicui:ImageryIcon x:Key="menuIcon"
                           DataContext="{Binding Path=IconSource}"
                           ImageryInfo="{Binding Path=Icon}"
                           IconResolver="{Binding Path=IconResolver}"
                           x:Shared="false"></uicui:ImageryIcon>
        <uipvm:MenuViewModelStyleSelector x:Key="CTX_MenuViewModelStyleSelector">
            <uipvm:MenuViewModelStyleSelector.IconMenu>
                <Style TargetType="MenuItem">
                    <Setter Property="Icon" Value="{StaticResource menuIcon}"/>
                    <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                    <Setter Property="Header" Value="{Binding Path=Header}"/>
                    <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                    <Setter Property="Command" Value="{Binding Path=Command}"/>
                    <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                </Style>
            </uipvm:MenuViewModelStyleSelector.IconMenu>
            <uipvm:MenuViewModelStyleSelector.NoIconMenu>
                <Style TargetType="MenuItem">
                    <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                    <Setter Property="Header" Value="{Binding Path=Header}"/>
                    <Setter Property="ToolTip" Value="{Binding Path=ToolTip}"/>
                    <Setter Property="Command" Value="{Binding Path=Command}"/>
                    <Setter Property="CommandParameter" Value="{Binding Path=Parameter}"/>
                </Style>
            </uipvm:MenuViewModelStyleSelector.NoIconMenu>
            <uipvm:MenuViewModelStyleSelector.Separator>
                <Style TargetType="MenuItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Separator Margin="24,2,8,2" >
                                    <Separator.Style>
                                        <Style TargetType="{x:Type Separator}" 
                                                BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}"/>
                                    </Separator.Style>
                                </Separator>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </uipvm:MenuViewModelStyleSelector.Separator>
        </uipvm:MenuViewModelStyleSelector>
        <DataTemplate DataType="{x:Type uipvm:ActorModel}">
            <StackPanel Orientation="Horizontal">
                <StackPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open View" Command="{Binding Path=OpenView}"/>
                        <MenuItem Header="Disconnect" Command="{Binding Path=LogOut}"/>
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <StackPanel Orientation="Vertical">
                    <Image Source="{Binding Path=CreatureLoginInfo.Portrait.Image}" 
                           Stretch="Uniform" Width="64" Height="64"></Image>
                    <ProgressBar DataContext="{Binding Path=CreatureModel.HealthBar}" Width="64" Height="8"
                                 Background="{Binding Path=Background}" Foreground="{Binding Path=Foreground}"
                                 Minimum="{Binding Path=Minimum}" Maximum="{Binding Path=Maximum}" 
                                 Value="{Binding Path=Current, Mode=OneWay}"/>
                </StackPanel>
                <StackPanel VerticalAlignment="Center" Margin="2" DataContext="{Binding Path=CreatureLoginInfo}">
                    <TextBlock Text="{Binding Path=Name}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Path=ClassString}" FontStyle="Oblique"/>
                    <TextBlock Text="{Binding Path=Species}" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:IsMasterModel}">
            <StackPanel Orientation="Horizontal">
                <StackPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Normal" 
                                  Command="{Binding Path=SetFlowState}"
                                  CommandParameter="{x:Static icontract:FlowState.Normal}"/>
                        <MenuItem Header="Paused"
                                  IsChecked="{Binding Path=Proxies.IsPaused, Mode=OneWay}"
                                  Command="{Binding Path=DoTogglePause}"/>
                        <Separator></Separator>
                        <MenuItem Header="Push Time"
                                  Command="{Binding Path=DoPushTimeTick}"/>
                        <MenuItem Header="Auto-TimeTick"
                                  IsChecked="{Binding Path=TickTrackerMode.Tracker.IsAutoTimeTick, Mode=OneWay}"
                                  Command="{Binding Path=DoToggleAutoTimeTick}"/>
                        <Separator></Separator>
                        <MenuItem Header="Advancement" 
                                  Command="{Binding Path=SetFlowState}"
                                  CommandParameter="{x:Static icontract:FlowState.Advancement}"/>
                        <Separator></Separator>
                        <MenuItem Header="Shutdown" 
                                  Command="{Binding Path=SetFlowState}" 
                                  CommandParameter="{x:Static icontract:FlowState.Shutdown}"/>
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <Border Background="LightSkyBlue" Width="64" Height="64">
                    <TextBlock Text="Game Master" TextAlignment="Center" VerticalAlignment="Center"
                               TextWrapping="Wrap" FontSize="16"></TextBlock>
                </Border>
                <StackPanel VerticalAlignment="Center" Margin="2">
                    <TextBlock Text="Game Master" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Path=Proxies.FlowState}" FontStyle="Oblique"/>
                    <TextBlock Text="Game Master" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type uipvm:MessageBoardModel}">
            <StackPanel Orientation="Horizontal">
                <Border Background="LightGreen" Width="64" Height="64">
                    <TextBlock Text="User Message" TextAlignment="Center" VerticalAlignment="Center"
                               TextWrapping="Wrap" FontSize="16"></TextBlock>
                </Border>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid x:Name="grdClient">
        <Grid.CommandBindings>
            <CommandBinding Command="{x:Static client:ClientMain.LoginCommand}" x:Name="cbLogin" CanExecute="cbLogin_CanExecute" Executed="cbLogin_Executed"></CommandBinding>
            <CommandBinding Command="{x:Static client:ClientMain.LogoutCommand}" x:Name="cbLogout" CanExecute="cbLogout_CanExecute" Executed="cbLogout_Executed"></CommandBinding>
            <CommandBinding Command="{x:Static client:ClientMain.ExitCommand}" x:Name="cbExit" CanExecute="cbExit_CanExecute" Executed="cbExit_Executed"></CommandBinding>
            <CommandBinding Command="{x:Static client:ClientMain.AboutCommand}" x:Name="cbAbout" CanExecute="cbAbout_CanExecute" Executed="cbAbout_Executed"></CommandBinding>
        </Grid.CommandBindings>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="Connect">
                <MenuItem Header="Login..." Icon="{StaticResource imgLogin}" Command="{x:Static client:ClientMain.LoginCommand}" CommandParameter="All" ></MenuItem>
                <MenuItem Header="Logout"  Icon="{StaticResource imgLogout}" Command="{x:Static client:ClientMain.LogoutCommand}" CommandParameter="All"></MenuItem>
                <Separator/>
                <MenuItem Header="Exit" Command="{x:Static client:ClientMain.ExitCommand}"></MenuItem>
            </MenuItem>
            <MenuItem Header="Actors">
                <MenuItem Header="Select" ItemsSource="{Binding Path=Actors}"
                          x:Name="mnuActors" Click="mnuActors_Click">
                </MenuItem>
                <Separator/>
                <MenuItem Header="Add Actor..." Icon="{StaticResource imgAddActor}" Command="{x:Static client:ClientMain.LoginCommand}" CommandParameter="Extra" ></MenuItem>
                <MenuItem Header="Drop Actor" Icon="{StaticResource imgDropActor}" x:Name="mnuDropActor" 
                          Click="mnuDropActor_Click" ItemsSource="{Binding Path=Actors}">
                </MenuItem>
            </MenuItem>
            <MenuItem Header="About..." Command="{x:Static client:ClientMain.AboutCommand}"/>
        </Menu>
        <DockPanel Grid.Row="1" LastChildFill="True">
            <ListBox ItemsSource="{Binding Path=ClientSelectors}" 
                     x:Name="lstActors"
                     MouseDoubleClick="lstActors_MouseDoubleClick"
                     SelectedItem="{Binding Path=SelectedClientSelector}"
                     DockPanel.Dock="Left" 
                     MinWidth="192" 
                     MaxWidth="288"></ListBox>
            <ContentControl Content="{Binding ElementName=lstActors, Path=SelectedItem}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type uipvm:ActorModel}">
                        <TabControl x:Name="tabControl" SelectedIndex="{Binding Path=SelectedTabIndex}">
                            <TabItem Header="Character">
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                                    <StackPanel Orientation="Vertical">
                                        <uicui:CharacterInfo DataContext="{Binding}" 
                                                             Take10Visibility="Collapsed"
                                                             Margin="0,0,2,0" />
                                        <uicui:AdditionalCharMisc DataContext="{Binding}" 
                                                                  Margin="2,0,0,0"
                                                                  FocusManager.IsFocusScope="True" 
                                                                  />
                                    </StackPanel>
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="Inventory">
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <uicui:ItemSlots Grid.Column="0"
                                                     Background="#FF808080" 
                                                     DataContext="{Binding}"
                                                     DoActionCommand="{Binding Path=DoAction}"
                                                     FocusManager.IsFocusScope="True" />
                                    <uicui:Inventory Grid.Column="1"
                                                     Background="#FF808080" 
                                                     FocusManager.IsFocusScope="True" 
                                                     DataContext="{Binding}"/>
                                </Grid>
                            </TabItem>
                            <TabItem Header="PreRequisites">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock DataContext="{Binding Path=Proxies}" 
                                               Visibility="{Binding Path=WaitingOnVisibility}"
                                               DockPanel.Dock="Bottom"
                                               Text="Waiting..." ToolTipService.ShowDuration="10000">
                                        <TextBlock.ToolTip>
                                            <ItemsControl ItemsSource="{Binding Path=WaitList}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                    <uicui:PrerequisitePanel Margin="4" 
                                                     HorizontalAlignment="Left" 
                                                     FocusManager.IsFocusScope="True" 
                                                     DataContext="{Binding Path=Prerequisites}"/>
                                </StackPanel>
                            </TabItem>
                            <TabItem Header="Log">
                                <uicui:LogItems Background="#FF808080" 
                                                DataContext="{Binding}"
                                                Proxies="{Binding Path=Proxies}"
                                                FocusManager.IsFocusScope="True"/>
                            </TabItem>
                            <TabItem Header="Advancement" Visibility="{Binding Path=AdvancementVisibility}">
                                <uicui:Advancement Background="#FF808080"
                                                   DataContext="{Binding}" 
                                                   FocusManager.IsFocusScope="True"/>
                            </TabItem>
                        </TabControl>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type ich:CreatureLoginInfo}">
                        <Border Margin="2" BorderBrush="Black" CornerRadius="1" BorderThickness="0.5" Padding="2">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Grid.RowSpan="2" Source="{Binding Path=Portrait.Image}" Width="40" Height="40"/>
                                <Label Grid.Row="0" Grid.Column="1" Content="{Binding Path=Name}" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=Species}" FontSize="10"/>
                                <ItemsControl Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" 
                                              ItemsSource="{Binding Path=Classes}" 
                                              VerticalAlignment="Center">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical">
                                            </StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontSize="10">
                                                <Run Text="{Binding Path=ClassName}"/>
                                                <Run Text="-"/>
                                                <Run Text="{Binding Path=CurrentLevel}"/>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type uipvm:IsMasterModel}">
                        <TabControl x:Name="tabControl" SelectedIndex="{Binding Path=SelectedTabIndex}">
                            <TabItem Header="Turn-Tracker">
                                <uicui:TurnTrackerPanel 
                                    Margin="4"
                                    HorizontalAlignment="Stretch"
                                    FocusManager.IsFocusScope="True"
                                    DataContext="{Binding}"
                                    />
                            </TabItem>
                            <TabItem Header="PreRequisites">
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock DataContext="{Binding Path=Proxies}" 
                                               Visibility="{Binding Path=WaitingOnVisibility}"
                                               Grid.Row="0"
                                               Text="Waiting..." ToolTipService.ShowDuration="10000">
                                        <TextBlock.ToolTip>
                                            <ItemsControl ItemsSource="{Binding Path=WaitList}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                    <uicui:MasterPrerequisitePanel 
                                        Grid.Row="1"
                                        Margin="4" 
                                        FocusManager.IsFocusScope="True" 
                                        Visibility="{Binding Path=Visibility}"
                                        DataContext="{Binding Path=Prerequisites}"/>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Stand-Down">
                                <TabItem.Resources>
                                    <Style TargetType="TextBlock" >
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="1"/>
                                    </Style>
                                    <HierarchicalDataTemplate DataType="{x:Type uipvm:TeamGroupModel}"
                                                              ItemsSource="{Binding Path=Creatures}">
                                        <Border MinWidth="196" BorderBrush="Black" Padding="2" CornerRadius="2">
                                            <TextBlock Grid.Column="0" Text="{Binding Path=TeamGroupInfo.Name}" FontSize="20"></TextBlock>
                                        </Border>
                                    </HierarchicalDataTemplate>
                                    <DataTemplate DataType="{x:Type uipvm:CreatureTrackerModel}">
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding Path=CreatureTrackerInfo}">
                                            <ContentControl Content="{Binding Path=CreatureLoginInfo}">
                                            </ContentControl>
                                            <uicui:LocalActionMiniTile Height="32" VerticalAlignment="Center" 
                                                                       DataContext="{Binding Path=LocalActionBudgetInfo}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </TabItem.Resources>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30,*"></ColumnDefinition>
                                        <ColumnDefinition Width="30,*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="40,*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Stand-Down Groups"></Label>
                                    <Label Grid.Column="1" Grid.Row="0" Content="Current Creatures"></Label>
                                    <Label Grid.Column="3" Grid.Row="0" Content="Available Creatures"></Label>
                                    <ListBox x:Name="lstStandDownGroups" ItemsSource="{Binding StandDownGroups}" 
                                             SelectedItem="{Binding Path=SelectedStandDownGroup}"
                                             Grid.Column="0" Grid.Row="1">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding StandDownGroupInfo.GroupName}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <ListBox x:Name="lstStandDownGroupMembers" 
                                             DataContext="{Binding SelectedStandDownGroup}" 
                                             ItemsSource="{Binding Creatures}" 
                                             Grid.Column="1" Grid.Row="1">
                                    </ListBox>
                                    <StackPanel VerticalAlignment="Center" Grid.Column="2" Grid.Row="1" Margin="4">
                                        <Button Content="&lt; Add"
                                                Command="{Binding DoStandDownGroupAdd}"
                                                CommandParameter="{Binding ElementName=tvwStandDownGroupNonMembers, Path=SelectedItem}"/>
                                        <Button Content="Remove Member &gt;"
                                                Command="{Binding DoStandDownGroupRemove}"
                                                CommandParameter="{Binding ElementName=lstStandDownGroupMembers, Path=SelectedItem}"/>
                                        <Button Content="Remove Team &gt;"
                                                Command="{Binding DoStandDownGroupRemove}"
                                                CommandParameter="{Binding ElementName=lstStandDownGroups, Path=SelectedItem}"/>
                                    </StackPanel>
                                    <TreeView x:Name="tvwStandDownGroupNonMembers" 
                                              ItemsSource="{Binding StandDownAvailable}"
                                              Grid.Column="3" Grid.Row="1">
                                        <!-- TODO: template -->
                                    </TreeView>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Advancement">
                                <TabItem.Resources>
                                    <Style TargetType="TextBlock" >
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="1"/>
                                    </Style>
                                </TabItem.Resources>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50,*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="50,*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Advancement Ready"></Label>
                                    <Label Grid.Column="2" Grid.Row="0" Content="Creatures"></Label>
                                    <ListBox Grid.Column="0" Grid.Row="1" 
                                             x:Name="lstReady"
                                             ItemsSource="{Binding Path=AdvancingCreatures}"></ListBox>
                                    <StackPanel VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Margin="4">
                                        <Button Content="&lt; Add"
                                                Command="{Binding Path=AllowAdvancement}"
                                                CommandParameter="{Binding ElementName=lstPotential, Path=SelectedItem}"/>
                                        <Button Content="Remove &gt;"
                                                Command="{Binding Path=RevokeAdvancement}"
                                                CommandParameter="{Binding ElementName=lstReady, Path=SelectedItem}"/>
                                    </StackPanel>
                                    <ListBox Grid.Column="2" Grid.Row="1" 
                                             x:Name="lstPotential"
                                             ItemsSource="{Binding Path=AdvanceableCreatures}"></ListBox>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Log">
                                <!--<uicui:LogItems Background="#FF808080" 
                                                DataContext="{Binding}"
                                                Proxies="{Binding Path=Proxies}"
                                                FocusManager.IsFocusScope="True"/>-->
                            </TabItem>
                        </TabControl>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type uipvm:MessageBoardModel}">
                        <uicui:Messages Background="#FF808080" 
                            MessagesVisible="{Binding Path=MessagesVisible}" 
                            DataContext="{Binding Path=Proxies}"
                            Proxies="{Binding}" 
                            UserName="{Binding Path=UserName}"
                            FocusManager.IsFocusScope="True"/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </DockPanel>
        <!-- animating log panel -->
        <StackPanel Background="#FFB0B0B0" Opacity="0.7" 
                    Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" x:Name="lstAniLog" >
            <StackPanel.Resources>
                <Style TargetType="TextBlock" >
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="1"/>
                </Style>
                <DataTemplate DataType="{x:Type ccontract:Info}">
                    <TextBlock Text="{Binding Path=Message}" FontSize="16" Margin="1"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type ccontract:Description}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Path=Message}" FontSize="16" Margin="1"/>
                        <ItemsControl ItemsSource="{Binding Path=Descriptions}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type uip:NotificationTopic}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Path=Topic}" FontWeight="Bold" FontSize="16" Margin="2"/>
                        <ItemsControl ItemsSource="{Binding Path=SysNotifies}"></ItemsControl>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type ccontract:SysNotify}">
                    <ItemsControl ItemsSource="{Binding Path=Infos, Mode=OneTime}"></ItemsControl>
                </DataTemplate>
            </StackPanel.Resources>
        </StackPanel>
    </Grid>
</Window>
