<Window x:Class="Uzi.Ikosa.Workshop.LinearGradient"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shop="clr-namespace:Uzi.Ikosa.Workshop"
        xmlns:wx="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        ResizeMode="NoResize" WindowStyle="ToolWindow" WindowStartupLocation="CenterOwner"
        Title="Linear Gradient" SizeToContent="WidthAndHeight">
    <Window.CommandBindings>
        <CommandBinding x:Name="cbOK" Command="{x:Static shop:LinearGradient.OKCommand}"
                        CanExecute="cbOK_CanExecute" Executed="cbOK_Executed"/>
        <CommandBinding x:Name="cbSteps" Command="{x:Static shop:LinearGradient.StepsCommand}"
                        CanExecute="cbSteps_CanExecute" Executed="cbSteps_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary Source="/Uzi.Ikosa.UI;Component/themes/generic.xaml">
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label x:Name="lblBrushKey" Content="Name" HorizontalAlignment="Right"/>
        <TextBox Grid.Column="1" x:Name="txtBrushKey" Margin="2" Grid.ColumnSpan="3"/>
        <DockPanel Grid.Column="0" Grid.Row="1" Grid.RowSpan="2">
            <TextBlock DockPanel.Dock="Top" Text="Direction" Margin="1" HorizontalAlignment="Center" />
            <UniformGrid Rows="3" Columns="3" Margin="1" VerticalAlignment="Top" DockPanel.Dock="Top" >
                <UniformGrid.CommandBindings>
                    <CommandBinding x:Name="cbAngle" Command="{x:Static shop:LinearGradient.AngleCommand}"
                                    CanExecute="cbAngle_CanExecute" Executed="cbAngle_Executed"/>
                </UniformGrid.CommandBindings>
                <UniformGrid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="32"/>
                        <Setter Property="Height" Value="32"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Command" Value="{x:Static shop:LinearGradient.AngleCommand}"/>
                    </Style>
                </UniformGrid.Resources>
                <Button CommandParameter="-135" >
                    <Button.Content>
                        <TextBlock Text="↑">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-45"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <Button CommandParameter="270" Content="↑" ></Button>
                <Button CommandParameter="315" >
                    <Button.Content>
                        <TextBlock Text="↑">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="45"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <Button CommandParameter="180" Content="←" ></Button>
                <TextBlock Text="Start" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                <Button CommandParameter="0" Content="→" ></Button>
                <Button CommandParameter="135">
                    <Button.Content>
                        <TextBlock Text="↑">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-135"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <Button CommandParameter="90" Content="↓" ></Button>
                <Button CommandParameter="45">
                    <Button.Content>
                        <TextBlock Text="↑">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="135"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
            </UniformGrid >
            <TextBlock Text="Sample" Margin="1" HorizontalAlignment="Center" DockPanel.Dock="Top" />
            <Rectangle Width="96" Height="96" Margin="1" x:Name="rectSample" />
        </DockPanel>
        <TextBlock Grid.Column="1" Grid.Row="1" Text="Color" Margin="1" HorizontalAlignment="Center" />
        <wx:ColorCanvas x:Name="cpStart" Grid.Row="2" Grid.Column="1" Margin="2" SelectedColorChanged="cpStart_SelectedColorChanged"
                        UsingAlphaChannel="True"/>
        <UniformGrid Columns="3" Grid.Column="3" Grid.Row="1" >
            <UniformGrid.CommandBindings>
                <CommandBinding Command="Delete" x:Name="cbDelete" 
                                CanExecute="cbSelected" Executed="cbDelete_Executed"/>
                <CommandBinding Command="{x:Static shop:LinearGradient.InsertCommand}" x:Name="cbInsert" 
                                CanExecute="cbSelected" Executed="cbInsert_Executed"/>
            </UniformGrid.CommandBindings>
            <Button Margin="1,1,0,0" Content="Add" x:Name="btnAdd" Click="btnAdd_Click"></Button>
            <Button Content="Insert" x:Name="Insert" Command="{x:Static shop:LinearGradient.InsertCommand}" />
            <Button Margin="0,1,1,0" Content="Remove" x:Name="btnRemove" Command="Delete"/>
        </UniformGrid>
        <Slider Orientation="Vertical" Minimum="0" Maximum="1" Grid.Row="2" Grid.Column="2" IsDirectionReversed="True" Value="0" 
                AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" TickFrequency="0.01" IsSnapToTickEnabled="True"
                SmallChange="0.05" LargeChange="0.1" Margin="1" x:Name="sldrOffset" ValueChanged="sldrOffset_ValueChanged"/>
        <ListBox Grid.Row="2" Grid.Column="3" MinWidth="192" Margin="1,0,1,1" x:Name="lstStops" 
                 SelectionChanged="lstStops_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate >
                    <UniformGrid Columns="2" Rows="1">
                        <Rectangle MinWidth="72" MinHeight="48" Margin="1" Stroke="Black" StrokeThickness="1" >
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{Binding Path=Color}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock Text="{Binding Path=Offset}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </UniformGrid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Row="3" Margin="1">
            <TextBlock Margin="1" VerticalAlignment="Center">Interpolation</TextBlock>
            <ComboBox MinWidth="96" x:Name="cboInterpolation" SelectionChanged="cboInterpolation_SelectionChanged">
                <ColorInterpolationMode>ScRgbLinearInterpolation</ColorInterpolationMode>
                <ColorInterpolationMode>SRgbLinearInterpolation</ColorInterpolationMode>
            </ComboBox>
            <TextBlock Margin="1" VerticalAlignment="Center">Spread</TextBlock>
            <ComboBox MinWidth="96" x:Name="cboSpread" SelectionChanged="cboSpread_SelectionChanged">
                <GradientSpreadMethod>Pad</GradientSpreadMethod>
                <GradientSpreadMethod>Reflect</GradientSpreadMethod>
                <GradientSpreadMethod>Repeat</GradientSpreadMethod>
            </ComboBox>
        </StackPanel>
        <Slider Orientation="Horizontal" Grid.Column="3" Grid.Row="3" Margin="1"
                Minimum="0" Maximum="1" Value="1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" 
                IsSnapToTickEnabled="True" TickFrequency="0.01" SmallChange="0.05" LargeChange="0.1" x:Name="sldrSize"
                ValueChanged="sldrSize_ValueChanged"/>
        <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="4" Margin="1">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Padding" Value="4,2"/>
                    <Setter Property="Margin" Value="1"/>
                </Style>
            </StackPanel.Resources>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="10">10</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="9">9</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="8">8</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="7">7</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="6">6</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="5">5</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="4">4</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="3">3</Button>
            <Button Command="{x:Static shop:LinearGradient.StepsCommand}" CommandParameter="2">2</Button>
        </StackPanel>
        <DockPanel Grid.Row="5" Grid.ColumnSpan="4" LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="DockPanel.Dock" Value="Right"/>
                    <Setter Property="MinWidth" Value="72"/>
                    <Setter Property="Margin" Value="2,1"/>
                </Style>
            </DockPanel.Resources>
            <Button IsCancel="True" Content="Cancel" x:Name="btnCancel" Click="btnCancel_Click"/>
            <Button IsDefault="True" Content="OK" Command="{x:Static shop:LinearGradient.OKCommand}"/>
        </DockPanel >
    </Grid>
</Window>
